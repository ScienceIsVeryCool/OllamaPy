name: Deploy Documentation

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: self-hosted
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      run: |
        # Use system Python 3.13 which is available on the local runner
        /usr/bin/python3.13 --version
        which /usr/bin/python3.13
        # Ensure pip is available and up to date
        /usr/bin/python3.13 -m pip install --upgrade pip
    
    - name: Install dependencies
      run: |
        # Create and activate virtual environment
        /usr/bin/python3.13 -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install mkdocs mkdocs-material mkdocs-include-markdown-plugin
    
    - name: Generate skill documentation
      run: |
        source venv/bin/activate
        mkdir -p docs/skills
        python -c "
        try:
            from src.ollamapy.skillgen_report import SkillDocumentationGenerator
            generator = SkillDocumentationGenerator(output_dir='docs/skills')
            generator.generate_documentation()
            print('✅ Skill documentation generated')
        except ImportError as e:
            print(f'⚠️ Skill documentation generator not available: {e}')
            # Create placeholder documentation
            with open('docs/skills/index.md', 'w') as f:
                f.write('# Skills Documentation\\n\\nSkills documentation will be available in future releases.')
        "
    
    - name: Create MkDocs structure
      run: |
        mkdir -p docs
        
        # Create main index if it doesn't exist
        if [ ! -f docs/index.md ]; then
          cp README.md docs/index.md
        fi
        
        # Create skill editor guide
        mkdir -p docs/skill-editor
    
    - name: Generate API documentation
      run: |
        source venv/bin/activate
        python -c "
        try:
            import inspect
            from src.ollamapy.skill_editor.api import SkillEditorAPI
            from src.ollamapy.skills import SkillRegistry
            
            # Generate API docs
            with open('docs/skill-editor/api.md', 'w') as f:
                f.write('# Skill Editor API Reference\\n\\n')
                f.write('## SkillEditorAPI Class\\n\\n')
                f.write(f'```python\\n{inspect.getsource(SkillEditorAPI.__init__)}```\\n\\n')
                
            with open('docs/skill-editor/getting-started.md', 'w') as f:
                f.write('# Getting Started with Skill Editor\\n\\n')
                f.write('## Installation\\n\\n')
                f.write('```bash\\npip install ollamapy[editor]\\n```\\n\\n')
                f.write('## Basic Usage\\n\\n')
                f.write('```bash\\nollamapy --skill-editor\\n```\\n')
            
            print('✅ API documentation generated')
        except ImportError as e:
            print(f'⚠️ API documentation not available: {e}')
            # Create placeholder documentation
            with open('docs/skill-editor/api.md', 'w') as f:
                f.write('# Skill Editor API Reference\\n\\nAPI documentation will be available when the skill editor module is complete.')
            with open('docs/skill-editor/getting-started.md', 'w') as f:
                f.write('# Getting Started with Skill Editor\\n\\nSkill editor documentation will be available in future releases.')
        "
    
    - name: Build with MkDocs
      run: |
        source venv/bin/activate
        mkdocs build
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'site'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4